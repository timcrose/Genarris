[Genarris_master]
#procedures = ["Structure_Generation_Batch"]
#procedures = ["Harris_Single_Molecule_Prep"]
#procedures = ["Harris_Approximation_Batch"]
#procedures = ["Relax_Single_Molecule", "Estimate_Unit_Cell_Volume", "Pygenarris_Structure_Generation", "RCD_Calculation", "RCD_Difference_Folder_Inner", "Affinity_Propagation_Fixed_Clusters", "FHI_Aims_Energy_Evaluation", "Affinity_Propagation_Fixed_Clusters", "Run_FHI_Aims_Batch"]
procedures = ["Relax_Single_Molecule", "Estimate_Unit_Cell_Volume", 
              "Pygenarris_Structure_Generation", "Run_Rdf_Calc", 
              "Affinity_Propagation_Fixed_Clusters", 
              "FHI_Aims_Energy_Evaluation", 
              "Affinity_Propagation_Fixed_Clusters", 
              "Run_FHI_Aims_Batch"]

#[relax_single_molecule]
# Number of cores (MPI ranks) to run this section with
#num_cores = 57
# path to aims control input file
#control_path = /home/trose/controls/control_relax_single_molecule.in
# output directory path of parent directory where working directories for aims will be placed
#aims_output_dir = aims_relaxation_single

#Default
#num_cores = comm.size

#Inferred
#molecule_path = /home/trose/genarris_run_calcs/genarris_v2/glycine/single_molecule/geometry.in.next_step
#aims_lib_dir = /home/trose/aims_python_lib/make_sys_intelpython3_full

[estimate_unit_cell_volume]
num_cores = 1
Z = 4
verbose = TRUE

#Default
#num_replicas = 1
#num_cores = comm.size

#Inferred
molecule_path = /home/trose/genarris_run_calcs/genarris_v2/glycine/single_molecule/glycine_single_molec_from_relaxed_2mpc.in

[pygenarris_structure_generation]
# Number of cores (MPI ranks) to run this section with
num_cores = 56
# Number of OpenMP Threads to set OMP_NUM_THREADS to
omp_num_threads = 2
num_structures = 5000
Z = 4
sr = 0.85
tol = 0.00001
max_attempts_per_spg_per_rank = 1000000000
geometry_out_filename = glycine_4mpc.out
output_format = json
output_dir = glycine_4mpc_raw_jsons

#Default
#num_replicas = 1
#omp_num_threads = 1
#num_cores = comm.size
#num_structures_per_allowed_SG_per_rank = ceil(num_structures / (num_compatible_spgs * num_cores))
#volume_mean -> replaced by estimate_unit_cell_volume if not specified here
#volume_mean = 156
#volume_std -> replaced by estimate_unit_cell_volume if not specified here
#volume_std = 11.7
#num_structures -> all generated by pygenarris are used
#truncate_to_num_structures = FALSE

#Inferred
#molecule_path = 

#plotting
#plot_histograms = TRUE
prop_figname = glycine_4mpc_raw_pool_volume_histogram.pdf
spg_bar_chart_fname = glycine_4mpc_raw_pool_spg_bar_chart.pdf
spg_bar_tick_rotation = vertical

[run_rdf_calc]
output_dir = glycine_4mpc_0_he_rdf
dist_mat_fpath = rdf_distance_matrix.dat

#Inferred
structure_dir = glycine_4mpc_raw_jsons

#Default
#num_cores = comm.size
#n_D_inter = 12
#init_scheme = shifted
#cutoff = 12
#eta_range = [0.05,0.5]
#Rs_range = [0.1,12]
#learn_rep = FALSE
#pdist_distance_type = euclidean
#device = cpu
#output_dir -> No new dir created, instead structure_dir is overwritten
#save_envs = FALSE
#normalize_rdf_vectors = TRUE
#standardize_distance_matrix = TRUE

[affinity_propagation_fixed_clusters]
#num_of_clusters = 5
preference_range = [-1000, 1000]
num_of_clusters_tolerance = 5
max_sampled_preferences = 10000
#uncomment to allow clustered pool output even if target num_of_clusters is not hit within tolerance
output_without_success = TRUE

# Parameters for AP calculation
affinity_type = ["multiplicative", 1000]
damping = 0.5
convergence_iter = 10
max_iter = 1000
energy_name = energy

#default: None, which allows AP to auto-set preference (or use preference_range if specified)
preference = None
property_key = AP_cluster
output_file = ./sample_ap_result.info
exemplars_output_dir = ./sample_structures_exemplars
#json, geometry, both
exemplars_output_format = json
output_format = json
output_dir = ./sample_structures_clustered
structure_suffix = .json
verbose = TRUE
#cluster_on_energy = TRUE

#Round 2
output_file_2 = sample_ap_result_2.info
exemplars_output_dir_2 = sample_structures_exemplars_2
num_of_clusters_2 = 65
output_dir_2 = sample_structures_clustered_2
cluster_on_energy_2 = TRUE

# Number of cores (MPI ranks) to run this section with
num_cores = 57

#Default
#num_cores = comm.size

# Inferred:
#dist_mat_input_file =  
#structure_dir = 

#plotting
#plot_histograms = TRUE
prop_figname = glycine_4mpc_cluster_exemplars_round_1_volume_histogram.pdf
spg_bar_chart_fname = glycine_4mpc_cluster_exemplars_round_1_spg_bar_chart.pdf
prop_figname_2 = glycine_4mpc_cluster_exemplars_round_2_volume_histogram.pdf
spg_bar_chart_fname_2 = glycine_4mpc_cluster_exemplars_round_2_spg_bar_chart.pdf
spg_bar_tick_rotation = vertical

[fhi_aims_energy_evaluation]
# Number of cores (MPI ranks) to run this section with
num_cores=57
num_replicas=1
# output directory path of parent directory where working directories for aims will be placed
aims_output_dir = aims_glycine_4mpc_with_energies
output_dir = glycine_4mpc_with_energies
# path to aims control input file
control_path = /home/trose/controls/control_scf.in
energy_name = energy

#Default
#num_cores = comm.size

#Inferred
##structure_dir =
aims_lib_dir = /home/trose/aims_python_lib/make_sys_intelpython3_full

[run_fhi_aims_batch]
# Number of cores (MPI ranks) to run this section with
num_cores=57
num_replicas=2
# output directory path of parent directory where working directories for aims will be placed
aims_output_dir = aims_glycine_4mpc_relaxed
output_dir = glycine_4mpc_relaxed
# path to aims control input file
control_path = /home/trose/controls/control_k333_full_relax.in
energy_name = energy
verbose=TRUE
#Default
#num_cores = comm.size

#Inferred
structure_dir = sample_structures_exemplars_2
aims_lib_dir = /home/trose/aims_python_lib/make_sys_intelpython3_full

# plotting
#plot_histograms = TRUE
prop_figname = glycine_4mpc_relaxed_pool_volume_histogram.pdf
spg_bar_chart_fname = glycine_4mpc_relaxed_pool_spg_bar_chart.pdf
spg_bar_tick_rotation = vertical
